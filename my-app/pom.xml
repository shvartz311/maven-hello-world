<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>my-app</name>
  <url>http://maven.apache.org</url>

  <properties>
      <!-- This property will be set by the Maven Dependency plugin -->
      <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>1.9.4</version>
    </dependency>
    <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>1.9.4</version>
    </dependency>
    <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>jdk8</artifactId>
        <version>1.9.4</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<version>1.2.1</version>
	<executions>
	  <execution>
	    <goals>
	      <goal>java</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <mainClass>com.mycompany.app.App</mainClass>
	  <arguments>
	    <argument>argument1</argument>
	  </arguments>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-shade-plugin</artifactId>
	<version>2.1</version>
	<executions>
	  <execution>
	    <phase>package</phase>
	    <goals>
	      <goal>shade</goal>
	    </goals>
	    <configuration>
	      <transformers>
		<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		  <mainClass>com.mycompany.app.App</mainClass>
		</transformer>
	      </transformers>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
          <!-- This plugin will set the properties values using dependency information -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.3</version>
          <executions>
              <execution>
                  <goals>
                      <goal>properties</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
      <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
          <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <fork>true</fork>
              <!-- Add all the checkers you want to enable here -->
              <annotationProcessors>
                  <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
              </annotationProcessors>
              <compilerArgs>
                  <!-- location of the annotated JDK, which comes from a Maven dependency -->
                  <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
              </compilerArgs>
          </configuration>
      </plugin>
    </plugins>
  </build>
</project>

<!-- Adding plugin for docker usage -->
<plugin>

<groupId>org.codehaus.mojo</groupId>

<artifactId>exec-maven-plugin</artifactId>

<version>1.6.0</version>

<executions>

    <!-- Remove existing image from local repo -->

  <execution>

    <id>docker-clean</id>

    <phase>install</phase>

    <goals>

      <goal>exec</goal>

    </goals>

    <configuration>

      <executable>docker</executable>

      <workingDirectory>${project.basedir}</workingDirectory>

      <arguments>

        <argument>rmi</argument>

        <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>

      </arguments>

    </configuration>

  </execution>

      

  <!-- 

    Create new docker image using Dockerfile which must be present in current working directory.

    Tag the image using maven project version information.

  -->

  <execution>

    <id>docker-build</id>

    <phase>install</phase>

    <goals>

      <goal>exec</goal>

    </goals>

    <configuration>

      <executable>docker</executable>

      <workingDirectory>${project.basedir}</workingDirectory>

      <arguments>

        <argument>build</argument>

        <argument>-t</argument>

        <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>

        <argument>.</argument>

      </arguments>

    </configuration>

  </execution>

      

      <!-- Login and Push the image to a docker repo. -->

  <execution>

    <id>docker-login</id>

    <phase>deploy</phase>

    <goals>

      <goal>exec</goal>

    </goals>

    <configuration>

      <executable>docker</executable>

      <workingDirectory>${project.basedir}</workingDirectory>

      <arguments>

        <argument>login</argument>

        <argument>-u</argument>

        <argument>${docker.user}</argument>

        <argument>-p</argument>

        <argument>${docker.password}</argument>

        <argument>${docker.url}</argument>

      </arguments>

    </configuration>

  </execution>

  <execution>

    <id>docker-push</id>

    <phase>deploy</phase>

    <goals>

      <goal>exec</goal>

    </goals>

    <configuration>

      <executable>docker</executable>

      <workingDirectory>${project.basedir}</workingDirectory>

      <arguments>

        <argument>push</argument>

        <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>

      </arguments>

    </configuration>

  </execution>

</executions>

</plugin>
